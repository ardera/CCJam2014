local termargs = {...}
local gameargs = {...}
local prefixpath = "/"
local executionpath = "/villages/"
local oldTerm = term.current()

if termargs[1] then
	executionpath = termargs[1]
	table.remove(gameargs, 1)
end

term.clear()
term.setCursorPos(1, 1)

-- utils

function require(fname, ...)
	local varargs = {...}
	local p = fs.combine(prefixpath, fname)
	local ret = {}
	if fs.exists(p) and not fs.isDir(p) then
		local r = fs.open(p, "r")
		local s = r.readAll()
		r.close()
		local f, err = loadstring(s, p)
		if not f then
			error("Unable to require file: \""..p.."\" error: \""..err.."\"", 2)
		end
		local ok, err = pcall(function() ret = {f(unpack(varargs))} end)
		if not ok then
			error("Unable to require file: \""..p.."\" error: \""..err.."\"", 2)
		end
	else
		error("Unable to require file: \""..p.."\" error: \"could not find file\"", 2)
	end
	return unpack(ret)
end

function setPrefix(p)
	prefixpath = p
end


-- real execution
setPrefix(executionpath)

require "util"

require "not32log"


require "main"
require "screen"
require "screenmenue"
require "screengame"
require "event"
require "game"
require "player"
require "elementcategory"
require "world"
require "worldelement"
require "camera"
require "worldgenerator"
require "buffer"
require "bufferwrap"
require "linkinglibrary"


local m = Villages()
local ok, err = pcall(function() m:main(gameargs) end)

term.redirect(oldTerm)

term.setBackgroundColor(colors.black)
term.setTextColor(colors.white)
term.clear()
term.setCursorPos(1, 1)

if not ok then
	term.setTextColor(colors.orange)
	print("Seems like Villages crashed.")
	print("Error Message: \"", err, "\"")
else
	print("Thanks for trying out Villages!")
end

clearclasses()